<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>de.hu_berlin.german.korpling.saltnpepper</groupId>
  <artifactId>pepper</artifactId>
  <version>1.1.3</version>
  <packaging>pom</packaging>
   <modules>
   	<module>pepper-logReader</module>
    <module>pepper-exceptions</module>
    <module>pepper-modules</module>
    <module>pepper-workflow</module>
    <module>pepper-framework</module>
    <module>pepper-testSuite</module>
    <module>pepper-parentModule</module>
    <module>pepper-starter</module>
  </modules>
   <description>Pepper is a plugable converter framework to convert linguistic data between several formats. Pepper is based on the linguistic meta model Salt. New formats can easily plugged into the framework via creating a PepperModule.</description>
   <url>https://korpling.german.hu-berlin.de/p/projects/pepper</url>
   <issueManagement>
   	<system>Redmine</system>
   	<url>https://korpling.german.hu-berlin.de/p/projects/pepper/issues</url>
   </issueManagement>
   <ciManagement>
   	<system>Jenkins</system>
   	<url>https://korpling.german.hu-berlin.de/jenkins/</url>
   </ciManagement>
   <inceptionYear>2009</inceptionYear>
   <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>
  <scm>
    <developerConnection>scm:svn:https://korpling.german.hu-berlin.de/svn/saltnpepper/pepper/tags/pepper-1.1.3</developerConnection>
    <url>scm:svn:https://korpling.german.hu-berlin.de/svn/saltnpepper/pepper/tags/pepper-1.1.3</url>
  </scm>
  <repositories>
    <repository>
      <id>korpling</id>
      <name>korpling maven repo</name>
      <url>http://korpling.german.hu-berlin.de/maven2</url>
    </repository>
  </repositories>
  <distributionManagement>
    <repository>
      <id>korpling</id>
      <name>korpling maven repo</name>
      <url>file:///srv/www/maven2/</url>
      <!--<url>scpexe://korpling.german.hu-berlin.de/srv/www/maven2/</url>-->
    </repository>
  </distributionManagement>
  
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <bundle.file>${project.groupId}.${project.artifactId}_${project.version}.jar</bundle.file>
    <assemblies.name>src/assemble/assemblies.xml</assemblies.name>
    <license.file>${basedir}/LICENSE</license.file>
    <notice.file>${basedir}/NOTICE</notice.file>
  </properties>
    <dependencies>
    	<dependency>
	    	<groupId>de.hu_berlin.german.korpling.saltnpepper</groupId>
	    	<artifactId>salt-graph</artifactId>
	    	<version>1.1.3</version>
	    	<type>bundle</type>
	    	<scope>compile</scope>
	    </dependency>
	    <dependency>
	    	<groupId>de.hu_berlin.german.korpling.saltnpepper</groupId>
	    	<artifactId>salt-saltCore</artifactId>
	    	<version>1.1.3</version>
	    	<type>bundle</type>
	    	<scope>compile</scope>
	    </dependency>
	    <dependency>
	    	<groupId>de.hu_berlin.german.korpling.saltnpepper</groupId>
	    	<artifactId>salt-saltCommon</artifactId>
	    	<version>1.1.3</version>
	    	<type>bundle</type>
	    	<scope>compile</scope>
	    </dependency>
	   <dependency>
	      <groupId>junit</groupId>
	      <artifactId>junit</artifactId>
	      <version>3.8.1</version>
	      <scope>test</scope>
	    </dependency>
	    <dependency>
	      <groupId>org.apache.felix</groupId>
	      <artifactId>org.osgi.core</artifactId>
	      <version>1.4.0</version>
	    </dependency>
	    <dependency>
	      <groupId>org.apache.felix</groupId>
	      <artifactId>org.osgi.compendium</artifactId>
	      <version>1.0.0</version>
	    </dependency>
	    <dependency>
	      <groupId>org.eclipse.emf</groupId>
	      <artifactId>org.eclipse.emf.common</artifactId>
	      <version>2.6.0.v20100614-1136</version>
	    </dependency>
	    <dependency>
	      <groupId>org.eclipse.emf</groupId>
	      <artifactId>org.eclipse.emf.ecore</artifactId>
	      <version>2.6.0.v20100614-1136</version>
	      <type>jar</type>
	      <scope>compile</scope>
	    </dependency>
	    <dependency>
	      <groupId>org.eclipse.emf</groupId>
	      <artifactId>org.eclipse.emf.ecore.xmi</artifactId>
	      <version>2.5.0.v20100521-1846</version>
	      <type>jar</type>
	      <scope>compile</scope>
	    </dependency>
	    <!-- OSGI service-component -->
	    <dependency>
	      <groupId>org.apache.felix</groupId>
	      <artifactId>org.apache.felix.scr.annotations</artifactId>
	      <version>1.6.0</version>
	    </dependency>
	    <!-- end OSGI service-component -->
    </dependencies>
	
  
    <organization>
    	<name>Humboldt Univerity of Berlin, INRIA</name>
    </organization>
    <build>
    
	<extensions>
      <!-- currently does not work, because with this, wagon tries to download dependent projects like Salt via ftp also.
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-ssh-external</artifactId>
        <version>2.2</version>
      </extension>
    -->
	</extensions>
     
	 
    <plugins>
   <!-- start: Plugin for automatic releasing -->
    <plugin>
       <artifactId>maven-release-plugin</artifactId>
       <version>2.1</version>
	   <configuration>
         <tagBase>
           https://korpling.german.hu-berlin.de/svn/saltnpepper/pepper/tags
         </tagBase>
         <releaseProfiles>release</releaseProfiles>
     		<goals>package assembly:single deploy</goals>
       </configuration>
     </plugin>
      <!-- end: Plugin for automatic releasing -->
      <!-- start: site plugin -->
      <plugin>
	    <groupId>org.apache.maven.plugins</groupId>
	    <artifactId>maven-site-plugin</artifactId>
	    <version>3.0</version>
	    <configuration>
        	<outputDirectory>${basedir}/docs/site</outputDirectory>
        </configuration>
      </plugin>
      <!-- end: site plugin -->
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <version>2.4.1</version>
        <executions>
          <execution>
            <goals>
              <goal>clean</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <filesets>
            <fileset>
              <directory>META-INF</directory>
              <directory>OSGI-INF</directory>
              <followSymlinks>false</followSymlinks>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
       <!-- creation of  OSGi Service components -->
		<plugin>
			<groupId>org.apache.felix</groupId>
            <artifactId>maven-scr-plugin</artifactId>
            <version>1.7.2</version>
            <executions>
                   <execution>
                        <id>generate-scr-scrdescriptor</id>
                        <goals>
                            <goal>scr</goal>
                        </goals>
                        <configuration>
                        	 <finalName>${component.descriptor.name}</finalName>
                        </configuration>
                   </execution>
            </executions>
        </plugin>
        <!-- end: creation of OSGi Service components -->
      <!-- start: assembly plugin -->
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>2.2.1</version>
        <configuration>
          <descriptors>
            <descriptor>${assemblies.name}</descriptor>
          </descriptors>
          <appendAssemblyId>false</appendAssemblyId>
          <finalName>${project.groupId}.pepper.${project.artifactId}_${project.version}</finalName>
          <outputDirectory>target/distribution</outputDirectory>
          <workDirectory>target/assembly/work</workDirectory>
        </configuration>
      </plugin>
      <!-- end: assembly plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.3.2</version>
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
        </configuration>
      </plugin>
      <!-- start: for generating license headers in source files. Run mvn license:format -->
      <plugin>
        <groupId>com.google.code.maven-license-plugin</groupId>
        <artifactId>maven-license-plugin</artifactId>
        <version>1.4.0</version>
        <configuration>
          <header>${basedir}/src/etc/header.txt</header>
          <includes>
            <include>src/main/java/**</include>
            <include>src/test/java/**</include>
          </includes>
        </configuration>
      </plugin>
      <!-- end: for generating license headers in source files. Run mvn license:format -->
      <!-- start: creates a NOTICE file use mvn notice:generate -->
      <plugin>
        <groupId>org.jasig.maven</groupId>
        <artifactId>maven-notice-plugin</artifactId>
        <version>1.0.4</version>
        <configuration>
          <noticeTemplate>./src/etc/NOTICE_template.txt</noticeTemplate>
        </configuration>
      </plugin>
      <!-- end: creates a NOTICE file use mvn notice:generate -->
    </plugins>
    <finalName>${project.groupId}.${project.artifactId}_${project.version}</finalName>
  </build>
  <name>${project.groupId}.${project.artifactId}</name>
</project>