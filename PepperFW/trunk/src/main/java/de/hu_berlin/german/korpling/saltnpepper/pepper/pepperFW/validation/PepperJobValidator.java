/**
 * Copyright 2009 Humboldt University of Berlin, INRIA.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *
 */
package de.hu_berlin.german.korpling.saltnpepper.pepper.pepperFW.validation;

import de.hu_berlin.german.korpling.saltnpepper.pepper.pepperFW.PepperFinishableMonitor;
import de.hu_berlin.german.korpling.saltnpepper.pepper.pepperFW.PepperModuleController;
import de.hu_berlin.german.korpling.saltnpepper.pepper.pepperFW.PepperQueuedMonitor;
import de.hu_berlin.german.korpling.saltnpepper.pepper.pepperModules.PepperExporter;
import de.hu_berlin.german.korpling.saltnpepper.pepper.pepperModules.PepperImporter;
import de.hu_berlin.german.korpling.saltnpepper.pepper.pepperModules.PepperModule;
import de.hu_berlin.german.korpling.saltnpepper.salt.saltCommon.SaltProject;

import org.eclipse.emf.common.util.EList;

/**
 * A sample validator interface for {@link de.hu_berlin.german.korpling.saltnpepper.pepper.pepperFW.PepperJob}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface PepperJobValidator {
	boolean validate();

	boolean validatePepperImporters(EList<PepperImporter> value);
	boolean validatePepperModules(EList<PepperModule> value);
	boolean validatePepperExporters(EList<PepperExporter> value);

	boolean validateId(Integer value);

	boolean validatePepperModuleControllers(EList<PepperModuleController> value);

	boolean validatePepperM2MMonitors(EList<PepperQueuedMonitor> value);

	boolean validatePepperM2JMonitors(EList<PepperFinishableMonitor> value);

	boolean validateSaltProject(SaltProject value);

	boolean validatePepperJ2CMonitor(PepperFinishableMonitor value);
}
